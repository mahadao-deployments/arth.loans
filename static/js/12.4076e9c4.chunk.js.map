{"version":3,"sources":["../../src/index.ts","../node_modules/eth-provider/browser.js","../node_modules/eth-provider/resolve/index.js","../node_modules/eth-provider/provider/index.js","../node_modules/ethereum-provider/index.js","../node_modules/eth-provider/ConnectionManager/index.js","../node_modules/eth-provider/presets/index.js","../node_modules/eth-provider/connections/injected.js","../node_modules/eth-provider/connections/unavailable.js","../node_modules/eth-provider/connections/ws.js","../node_modules/eth-provider/parse/index.js","../node_modules/eth-provider/connections/http.js","../node_modules/eth-provider/node_modules/uuid/v4.js","../node_modules/eth-provider/node_modules/uuid/lib/rng-browser.js","../node_modules/eth-provider/node_modules/uuid/lib/bytesToUuid.js"],"names":["AbstractConnector","supportedChainIds","emitUpdate","update","emit","ConnectorEvent","Update","emitError","error","Error","emitDeactivate","Deactivate","EventEmitter","resolve","require","provider","presets","injected","ethereum","window","web3","currentProvider","ws","WebSocket","XHR","XMLHttpRequest","__isProvider","connections","ipc","http","module","exports","targets","options","getProtocol","location","endsWith","startsWith","concat","map","type","protocol","filter","console","log","EthereumProvider","ConnectionManager","monitor","status","check","inSetup","setTimeout","send","on","t","indexOf","setMaxListeners","connection","connected","nextId","promises","subscriptions","checkConnection","payload","id","method","result","reject","params","subscription","event","listener","attemptedNetworkSubscription","startNetworkSubscription","attemptedAccountsSubscription","startAccountsSubscription","this","_send","listenerCount","subscribe","networkChanged","netId","warn","accountsChanged","accounts","Promise","then","length","coinbase","err","code","catch","Array","jsonrpc","promise","requests","all","push","success","_id","removeAllListeners","cb","sendAsyncBatch","_sendBatch","results","entry","index","close","forEach","dev","process","interval","name","connect","message","connectionError","summary","closing","refresh","target","data","clearTimeout","connectTimer","closed","frame","direct","infura","infuraRopsten","infuraRinkeby","infuraKovan","InjectedConnection","_injected","UnavailableConnection","parse","WebSocketConnection","_WebSocket","url","create","socket","e","addEventListener","payloads","load","isArray","onClose","readyState","CONNECTING","_","JSON","stringify","last","timeout","res","values","replace","split","uuid","HTTPConnection","_XHR","pollId","init","response","pollSubscriptions","subscriptionTimeout","p","n","statusText","internal","xhr","responded","abort","open","setRequestHeader","onerror","ontimeout","onreadystatechange","responseText","rng","bytesToUuid","buf","offset","i","rnds","random","ii","getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","r","Math","byteToHex","toString","substr","bth","join","UserRejectedRequestError","constructor","FrameConnector","kwargs","handleNetworkChanged","handleChainChanged","handleAccountsChanged","handleClose","networkId","chainId","account","reason","activate","ethProvider","enable","getProvider","getChainId","getAccount","deactivate","removeListener"],"mappings":"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","file":"static/js/12.4076e9c4.chunk.js","sourcesContent":["import { AbstractConnectorArguments, ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport ethProvider from 'eth-provider'\nimport invariant from 'tiny-invariant'\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The user rejected the request.'\n  }\n}\n\nexport class FrameConnector extends AbstractConnector {\n  private provider: any\n\n  constructor(kwargs: Required<AbstractConnectorArguments>) {\n    invariant(kwargs.supportedChainIds.length === 1, 'This connector only supports 1 chainId at the moment.')\n    super(kwargs)\n\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this)\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n  }\n\n  private handleNetworkChanged(networkId: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'networkChanged' event with payload\", networkId)\n    }\n    this.emitUpdate({ provider: this.provider, chainId: networkId })\n  }\n\n  private handleChainChanged(chainId: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    }\n    this.emitUpdate({ chainId })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    }\n    this.emitUpdate({ account: accounts.length === 0 ? null : accounts[0] })\n  }\n\n  private handleClose(code: number, reason: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'close' event with payload\", code, reason)\n    }\n    this.emitDeactivate()\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.provider) {\n      this.provider = ethProvider('frame')\n    }\n\n    this.provider\n      .on('networkChanged', this.handleNetworkChanged)\n      .on('chainChanged', this.handleChainChanged)\n      .on('accountsChanged', this.handleAccountsChanged)\n      .on('close', this.handleClose)\n\n    const account = await this.provider\n      .enable()\n      .then((accounts: string[]): string => accounts[0])\n      .catch((error: Error): void => {\n        if (error && (error as any).code === 4001) {\n          throw new UserRejectedRequestError()\n        } else {\n          throw error\n        }\n      })\n\n    return { provider: this.provider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.provider\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.provider.send('eth_chainId')\n  }\n\n  public async getAccount(): Promise<null> {\n    return this.provider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {\n    this.provider\n      .removeListener('networkChanged', this.handleNetworkChanged)\n      .removeListener('chainChanged', this.handleChainChanged)\n      .removeListener('accountsChanged', this.handleAccountsChanged)\n      .removeListener('close', this.handleClose)\n  }\n}\n","const resolve = require('./resolve')\nconst provider = require('./provider')\nconst presets = require('./presets')\n\nconst injected = {\n  ethereum: typeof window !== 'undefined' && typeof window.ethereum !== 'undefined' ? window.ethereum : null,\n  web3: typeof window !== 'undefined' && typeof window.web3 !== 'undefined' ? window.web3.currentProvider : null\n}\nconst ws = typeof window !== 'undefined' && typeof window.WebSocket !== 'undefined' ? window.WebSocket : null\nconst XHR = typeof window !== 'undefined' && typeof window.XMLHttpRequest !== 'undefined' ? window.XMLHttpRequest : null\n\nif (injected.ethereum) injected.ethereum.__isProvider = true\n\nconst connections = {\n  injected: injected.ethereum || require('./connections/injected')(injected.web3),\n  ipc: require('./connections/unavailable')('IPC connections are unavliable in the browser'),\n  ws: require('./connections/ws')(ws),\n  http: require('./connections/http')(XHR)\n}\n\nmodule.exports = (targets = ['injected', 'frame'], options = {}) => provider(connections, resolve(targets, presets), options)\n","const getProtocol = location => {\n  if (location === 'injected') return 'injected'\n  if (location.endsWith('.ipc')) return 'ipc'\n  if (location.startsWith('wss://') || location.startsWith('ws://')) return 'ws'\n  if (location.startsWith('https://') || location.startsWith('http://')) return 'http'\n  return ''\n}\n\nmodule.exports = (targets, presets) => {\n  return [].concat(...[].concat(targets).map(provider => {\n    if (presets[provider]) {\n      return presets[provider].map(location => ({ type: provider, location, protocol: getProtocol(location) }))\n    } else {\n      return { type: 'custom', location: provider, protocol: getProtocol(provider) }\n    }\n  })).filter(provider => {\n    if (provider.protocol || provider.type === 'injected') {\n      return true\n    } else {\n      console.log('eth-provider | Invalid provider preset/location: \"' + provider.location + '\"')\n      return false\n    }\n  })\n}\n","const EventEmitter = require('events')\nconst EthereumProvider = require('ethereum-provider')\nconst ConnectionManager = require('../ConnectionManager')\n\nconst monitor = provider => {\n  function update (status) {\n    provider.status = status\n    if (provider instanceof EventEmitter) provider.emit('status', status)\n  }\n  async function check () {\n    if (provider.inSetup) return setTimeout(check, 1000)\n    try {\n      if (await provider.send('eth_syncing')) {\n        update('syncing')\n        setTimeout(() => check(), 5000)\n      } else {\n        update('connected')\n      }\n    } catch (e) {\n      update('disconnected')\n    }\n  }\n  update('loading')\n  check()\n  provider.on('connect', () => check())\n  provider.on('close', () => update('disconnected'))\n  return provider\n}\n\nmodule.exports = (connections, targets, options) => {\n  // If window.ethereum and injected is a target in any priority, return ethereum provider\n  if (connections.injected.__isProvider && targets.map(t => t.type).indexOf('injected') > -1) {\n    delete connections.injected.__isProvider\n    return monitor(connections.injected)\n  }\n  const provider = new EthereumProvider(new ConnectionManager(connections, targets, options))\n  provider.setMaxListeners(128)\n  return monitor(provider)\n}\n","const EventEmitter = require('events')\n\nclass EthereumProvider extends EventEmitter {\n  constructor (connection) {\n    super()\n    this.connected = false\n    this.nextId = 0\n    this.promises = {}\n    this.subscriptions = []\n    this.connection = connection\n    this.connection.on('connect', () => this.checkConnection())\n    this.connection.on('close', () => this.emit('close'))\n    this.connection.on('payload', payload => {\n      const { id, method, error, result } = payload\n      if (typeof id !== 'undefined') {\n        if (this.promises[id]) { // Fulfill promise\n          payload.error ? this.promises[id].reject(error) : this.promises[id].resolve(result)\n          delete this.promises[id]\n        }\n      } else if (method && method.indexOf('_subscription') > -1) { // Emit subscription result\n        this.emit(payload.params.subscription, payload.params.result)\n        this.emit(method, payload.params) // Latest EIP-1193\n        this.emit('data', payload) // Backwards Compatibility\n      }\n    })\n    this.on('newListener', (event, listener) => {\n      if (event === 'networkChanged') {\n        if (!this.attemptedNetworkSubscription && this.connected) this.startNetworkSubscription()\n      } else if (event === 'accountsChanged') {\n        if (!this.attemptedAccountsSubscription && this.connected) this.startAccountsSubscription()\n      }\n    })\n  }\n  async checkConnection () {\n    try {\n      this.emit('connect', await this._send('net_version'))\n      this.connected = true\n      if (this.listenerCount('networkChanged') && !this.attemptedNetworkSubscription) this.startNetworkSubscription()\n      if (this.listenerCount('accountsChanged') && !this.attemptedAccountsSubscription) this.startAccountsSubscription()\n    } catch (e) {\n      this.connected = false\n    }\n  }\n  async startNetworkSubscription () {\n    this.attemptedNetworkSubscription = true\n    try {\n      let networkChanged = await this.subscribe('eth_subscribe', 'networkChanged')\n      this.on(networkChanged, netId => this.emit('networkChanged', netId))\n    } catch (e) {\n      console.warn('Unable to subscribe to networkChanged', e)\n    }\n  }\n  async startAccountsSubscription () {\n    this.attemptedAccountsSubscription = true\n    try {\n      let accountsChanged = await this.subscribe('eth_subscribe', 'accountsChanged')\n      this.on(accountsChanged, accounts => this.emit('accountsChanged', accounts))\n    } catch (e) {\n      console.warn('Unable to subscribe to accountsChanged', e)\n    }\n  }\n  enable () {\n    return new Promise((resolve, reject) => {\n      this._send('eth_accounts').then(accounts => {\n        if (accounts.length > 0) {\n          this.accounts = accounts\n          this.coinbase = accounts[0]\n          this.emit('enable')\n          resolve(accounts)\n        } else {\n          const err = new Error('User Denied Full Provider')\n          err.code = 4001\n          reject(err)\n        }\n      }).catch(reject)\n    })\n  }\n  _send (method, params = []) {\n    if (!method || typeof method !== 'string') return new Error('Method is not a valid string.')\n    if (!(params instanceof Array)) return new Error('Params is not a valid array.')\n    const payload = { jsonrpc: '2.0', id: this.nextId++, method, params }\n    const promise = new Promise((resolve, reject) => { this.promises[payload.id] = { resolve, reject } })\n    this.connection.send(payload)\n    return promise\n  }\n  send (...args) { // Send can be clobbered, proxy sendPromise for backwards compatibility\n    return this._send(...args)\n  }\n  _sendBatch (requests) {\n    return Promise.all(requests.map(payload => this._send(payload.method, payload.params)))\n  }\n  subscribe (type, method, params = []) {\n    return this._send(type, [method, ...params]).then(id => {\n      this.subscriptions.push(id)\n      return id\n    })\n  }\n  unsubscribe (type, id) {\n    return this._send(type, [id]).then(success => {\n      if (success) {\n        this.subscriptions = this.subscriptions.filter(_id => _id !== id) // Remove subscription\n        this.removeAllListeners(id) // Remove listeners\n        return success\n      }\n    })\n  }\n  sendAsync (payload, cb) { // Backwards Compatibility\n    if (!cb || typeof cb !== 'function') return cb(new Error('Invalid or undefined callback provided to sendAsync'))\n    if (!payload) return cb(new Error('Invalid Payload'))\n    // sendAsync can be called with an array for batch requests used by web3.js 0.x\n    // this is not part of EIP-1193's backwards compatibility but we still want to support it\n    if (payload instanceof Array) {\n      return this.sendAsyncBatch(payload, cb)\n    } else {\n      return this._send(payload.method, payload.params).then(result => {\n        cb(null, { id: payload.id, jsonrpc: payload.jsonrpc, result })\n      }).catch(err => {\n        cb(err)\n      })\n    }\n  }\n  sendAsyncBatch (payload, cb) {\n    return this._sendBatch(payload).then((results) => {\n      let result = results.map((entry, index) => {\n        return { id: payload[index].id, jsonrpc: payload[index].jsonrpc, result: entry }\n      })\n      cb(null, result)\n    }).catch(err => {\n      cb(err)\n    })\n  }\n  isConnected () { // Backwards Compatibility\n    return this.connected\n  }\n  close () {\n    this.connection.close()\n    this.connected = false\n    let error = new Error(`Provider closed, subscription lost, please subscribe again.`)\n    this.subscriptions.forEach(id => this.emit(id, error)) // Send Error objects to any open subscriptions\n    this.subscriptions = [] // Clear subscriptions\n  }\n}\n\nmodule.exports = EthereumProvider\n","const EventEmitter = require('events')\n\nconst dev = process.env.NODE_ENV === 'development'\n\nclass ConnectionManager extends EventEmitter {\n  constructor (connections, targets, options) {\n    super()\n    this.targets = targets\n    this.connections = connections\n    this.connected = false\n    this.status = 'loading'\n    this.interval = options.interval || 5000\n    this.name = options.name || 'default'\n    this.inSetup = true\n    this.connect()\n  }\n\n  connect (index = 0) {\n    if (dev && index === 0) console.log(`\\n\\n\\n\\nA connection cycle started for provider with name: ${this.name}`)\n\n    if (this.connection && this.connection.status === 'connected' && index >= this.connection.index) {\n      if (dev) console.log('Stopping connection cycle becasuse we\\'re already connected to a higher priority provider')\n    } else if (this.targets.length === 0) {\n      if (dev) console.log('No valid targets supplied')\n    } else {\n      const { protocol, location } = this.targets[index]\n      this.connection = this.connections[protocol](location)\n\n      this.connection.on('error', err => {\n        if (!this.connected) return this.connectionError(index, err)\n        if (this.listenerCount('error')) return this.emit('error', err)\n        console.warn('eth-provider - Uncaught connection error: ' + err.message)\n      })\n\n      this.connection.on('close', (summary) => {\n        this.connected = false\n        this.emit('close')\n        if (!this.closing) this.refresh()\n      })\n\n      this.connection.on('connect', () => {\n        this.connection.target = this.targets[index]\n        this.connection.index = index\n        this.targets[index].status = this.connection.status\n        this.connected = true\n        this.inSetup = false\n        if (dev) console.log('Successfully connected to: ' + this.targets[index].location)\n        this.emit('connect')\n      })\n\n      this.connection.on('data', data => this.emit('data', data))\n      this.connection.on('payload', payload => this.emit('payload', payload))\n    }\n  }\n\n  refresh (interval = this.interval) {\n    if (dev) console.log(`Reconnect queued for ${(interval / 1000).toFixed(2)}s in the future`)\n    clearTimeout(this.connectTimer)\n    this.connectTimer = setTimeout(() => this.connect(), interval)\n  }\n\n  connectionError (index, err) {\n    this.targets[index].status = err\n    if (this.targets.length - 1 === index) {\n      this.inSetup = false\n      if (dev) console.warn('eth-provider unable to connect to any targets, view connection cycle summary: ', this.targets)\n      this.refresh()\n    } else { // Not last target, move on the next connection option\n      this.connect(++index)\n    }\n  }\n\n  close () {\n    this.closing = true\n    if (this.connection) {\n      this.connection.close() // Let event bubble from here\n    } else {\n      this.emit('close')\n    }\n    clearTimeout(this.connectTimer)\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload) {\n    if (this.inSetup) {\n      setTimeout(() => this.send(payload), 100)\n    } else if (this.connection.closed) {\n      this.error(payload, 'Not connected')\n    } else {\n      this.connection.send(payload)\n    }\n  }\n}\n\nmodule.exports = ConnectionManager\n","module.exports = {\n  injected: ['injected'],\n  frame: ['ws://127.0.0.1:1248', 'http://127.0.0.1:1248'],\n  direct: ['ws://127.0.0.1:8546', 'http://127.0.0.1:8545'], // IPC paths will be prepended in Node/Electron\n  infura: ['wss://mainnet.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://mainnet.infura.io/v3/786ade30f36244469480aa5c2bf0743b'],\n  infuraRopsten: ['wss://ropsten.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://ropsten.infura.io/v3/786ade30f36244469480aa5c2bf0743b'],\n  infuraRinkeby: ['wss://rinkeby.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://rinkeby.infura.io/v3/786ade30f36244469480aa5c2bf0743b'],\n  infuraKovan: ['wss://kovan.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://kovan.infura.io/v3/786ade30f36244469480aa5c2bf0743b']\n}\n","const EventEmitter = require('events')\n\nclass InjectedConnection extends EventEmitter {\n  constructor (_injected, options) {\n    super()\n    if (_injected) {\n      setTimeout(() => this.emit('error', new Error('Injected web3 provider is not currently supported')), 0)\n    } else {\n      setTimeout(() => this.emit('error', new Error('No injected provider found')), 0)\n    }\n  }\n}\n\nmodule.exports = injected => options => new InjectedConnection(injected, options)\n","const EventEmitter = require('events')\n\nclass UnavailableConnection extends EventEmitter {\n  constructor (message) {\n    super()\n    setTimeout(() => this.emit('error', new Error(message)), 0)\n  }\n}\n\nmodule.exports = message => () => new UnavailableConnection(message)\n","const EventEmitter = require('events')\nconst parse = require('../parse')\nconst dev = process.env.NODE_ENV === 'development'\n\nlet WebSocket\n\nclass WebSocketConnection extends EventEmitter {\n  constructor (_WebSocket, url, options) {\n    super()\n    WebSocket = _WebSocket\n    setTimeout(() => this.create(url, options), 0)\n  }\n\n  create (url, options) {\n    if (!WebSocket) this.emit('error', new Error('No WebSocket transport available'))\n    try { this.socket = new WebSocket(url) } catch (e) { return this.emit('error', e) }\n    this.socket.addEventListener('error', err => this.emit('error', err))\n    this.socket.addEventListener('open', () => {\n      this.emit('connect')\n      this.socket.addEventListener('message', message => {\n        const data = typeof message.data === 'string' ? message.data : ''\n        parse(data, (err, payloads) => {\n          if (err) return //\n          payloads.forEach(load => {\n            if (Array.isArray(load)) {\n              load.forEach(payload => this.emit('payload', payload))\n            } else {\n              this.emit('payload', load)\n            }\n          })\n        })\n      })\n      this.socket.addEventListener('close', () => this.onClose())\n    })\n  }\n\n  onClose () {\n    this.socket = null\n    this.closed = true\n    if (dev) console.log('Closing WebSocket connection')\n    this.emit('close')\n    this.removeAllListeners()\n  }\n\n  close () {\n    if (this.socket) {\n      this.socket.close()\n    } else {\n      this.onClose()\n    }\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload) {\n    if (this.socket && this.socket.readyState === this.socket.CONNECTING) {\n      setTimeout(_ => this.send(payload), 10)\n    } else if (!this.socket || this.socket.readyState > 1) {\n      this.connected = false\n      this.error(payload, 'Not connected')\n    } else {\n      this.socket.send(JSON.stringify(payload))\n    }\n  }\n}\n\nmodule.exports = WebSocket => (url, cb) => new WebSocketConnection(WebSocket, url, cb)\n","let last, timeout\n\nmodule.exports = (res, cb) => {\n  const values = []\n  res\n    .replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n    .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n    .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n    .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n    .split('|--|')\n    .forEach(data => {\n      if (last) data = last + data // prepend the last chunk\n      let result\n      try {\n        result = JSON.parse(data)\n      } catch (e) {\n        last = data\n        clearTimeout(timeout) // restart timeout\n        timeout = setTimeout(() => cb(new Error('Parse response timeout')), 15 * 1000)\n        return\n      }\n      clearTimeout(timeout)\n      last = null\n      if (result) values.push(result)\n    })\n  cb(null, values)\n}\n","const EventEmitter = require('events')\nconst uuid = require('uuid/v4')\n\nconst dev = process.env.NODE_ENV === 'development'\n\nlet XHR\n\nclass HTTPConnection extends EventEmitter {\n  constructor (_XHR, url, options) {\n    super()\n    XHR = _XHR\n    this.connected = false\n    this.subscriptions = false\n    this.status = 'loading'\n    this.url = url\n    this.pollId = uuid()\n    setTimeout(() => this.create(), 0)\n  }\n\n  create () {\n    if (!XHR) return this.emit('error', new Error('No HTTP transport available'))\n    this.on('error', () => { if (this.connected) this.close() })\n    this.init()\n  }\n\n  init () {\n    this.send({ jsonrpc: '2.0', method: 'eth_syncing', params: [], id: 1 }, (err, response) => {\n      if (err) return this.emit('error', err)\n      this.send({ jsonrpc: '2.0', id: 1, method: 'eth_pollSubscriptions', params: [this.pollId, 'immediate'] }, (err, response) => {\n        if (!err) {\n          this.subscriptions = true\n          this.pollSubscriptions()\n        }\n        this.connected = true\n        this.emit('connect')\n      })\n    })\n  }\n\n  pollSubscriptions () {\n    this.send({ jsonrpc: '2.0', id: 1, method: 'eth_pollSubscriptions', params: [this.pollId] }, (err, result) => {\n      if (err) {\n        this.subscriptionTimeout = setTimeout(() => this.pollSubscriptions(), 10000)\n        return this.emit('error', err)\n      } else {\n        if (!this.closed) this.subscriptionTimeout = this.pollSubscriptions()\n        if (result) {\n          result.map(p => {\n            let parse\n            try { parse = JSON.parse(p) } catch (e) { parse = false }\n            return parse\n          }).filter(n => n).forEach(p => this.emit('payload', p))\n        }\n      }\n    })\n  }\n\n  close () {\n    if (dev) console.log('Closing HTTP connection')\n    this.closed = true\n    this.emit('close')\n    clearTimeout(this.subscriptionTimeout)\n    this.removeAllListeners()\n  }\n\n  filterStatus (res) {\n    if (res.status >= 200 && res.status < 300) return res\n    const error = new Error(res.statusText)\n    error.res = res\n    throw error.message\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload, internal) {\n    if (this.closed) return this.error(payload, 'Not connected')\n    if (payload.method === 'eth_subscribe') {\n      if (this.subscriptions) {\n        payload.pollId = this.pollId\n      } else {\n        return this.error(payload, 'Subscriptions are not supported by this HTTP endpoint')\n      }\n    }\n    const xhr = new XHR()\n    let responded = false\n    const res = (err, result) => {\n      if (!responded) {\n        xhr.abort()\n        responded = true\n        if (internal) {\n          internal(err, result)\n        } else {\n          const { id, jsonrpc } = payload\n          const load = err ? { id, jsonrpc, error: { message: err.message, code: err.code } } : { id, jsonrpc, result }\n          this.emit('payload', load)\n        }\n      }\n    }\n    xhr.open('POST', this.url, true)\n    xhr.setRequestHeader('Content-Type', 'application/json')\n    xhr.timeout = 60 * 1000\n    xhr.onerror = res\n    xhr.ontimeout = res\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        try {\n          const response = JSON.parse(xhr.responseText)\n          res(response.error, response.result)\n        } catch (e) {\n          res(e)\n        }\n      }\n    }\n    xhr.send(JSON.stringify(payload))\n  }\n}\n\nmodule.exports = XHR => (url, options) => new HTTPConnection(XHR, url, options)\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n"],"sourceRoot":""}